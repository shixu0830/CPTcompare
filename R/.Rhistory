radius = 4.5
height = 450
width = 890
# clickme plot
options(clickme_output_path = "/Users/xushi/",#output_path,
clickme_template_path = "/Users/xushi/")#output_path)
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 150),
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(right = 20),
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 20),
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 40,top=40),
file = paste(name,".html",sep=""))$iframe()
#               height = 600,
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 60,top=60),
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 70,top=80),
file = paste(name,".html",sep=""))$iframe()
#               height = 600,
#               width = 2000,
width = 870
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 70,top=80),
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
width = width-20,
font = "Arial",
padding = list(left = 70,top=80),
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
width = width-120,
font = "Arial",
padding = list(left = 70,top=80),
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
width = 720,
font = "Arial",
padding = list(left = 70,top=80),
file = paste(name,".html",sep=""))$iframe()
#               height = 600,
#               width = 2000,
#               relative_path =
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 70,top=80),
file = paste(name,".html",sep=""))$iframe()
#               height = 600,
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 80,top=100),
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 70,top=100,right=70),
file = paste(name,".html",sep=""))$iframe()
clickme(points,
title = name,x = pdata$block, y = pdata$log2RR,
names = pdata$code,
extra = list("Info" = pdata$extra),
x_title = "Block", y_title = "lob2RR",
#xlab = "block #", ylab = "log2RR",
palette = c("> 0.05" = "#E0E0E0",
"0.05 - 0.01" = "#be29ec",
"0.01 - sig" = "#3bd6c6",
"sig." = "red"
),
color_groups = pdata$level,
opacity = opacity, radius = radius,
out_height = height,
out_width = width,
font = "Arial",
padding = list(left = 70),
file = paste(name,".html",sep=""))$iframe()
# check same length of the input variables
if(length(id)!=length(code)){
stop("IDs and CPT codes have different lengths")
} else if(length(code)!=length(site)){
stop("Sites and CPT codes have different lengths")
} else if(length(site)!=length(id)){
stop("Sites and IDs have different lengths")
}
summary(id)
summary(code)
summary(site)
# check same length of the input variables
if(length(id)!=length(code)){
stop("IDs and CPT codes have different lengths")
} else if(length(code)!=length(site)){
stop("Sites and CPT codes have different lengths")
} else if(length(site)!=length(id)){
stop("Sites and IDs have different lengths")
}
# check format of site variable
u.site = unique(site)
if(length(u.site)==1){
stop("Only one value in site")
}else if(length(u.site)>2){
stop("More than two values in site")
}else if( (which(u.site==1)+which(u.site==0)) != 3){
stop("Site is a vector of 0 and 1. Please check values of site")
}
# check NA in data
cpt = data.frame(id,code,site)
cpt$code = as.character(code)
if(length( (msgind=which(is.na(id)))==T )>0){
msg<-sprintf("Observations with NA's in ID deleted")
warning(msg,call.=TRUE)
cpt = cpt[-msgind,]
} else if(length( (msgind=which(is.na(code)))==T )>0){
msg<-sprintf("Observations with NA's in code deleted")
warning(msg,call.=TRUE)
cpt = cpt[-msgind,]
} else if(length( (msgind=which(is.na(site)))==T )>0){
msg<-sprintf("Observations with NA's in site deleted")
warning(msg,call.=TRUE)
cpt = cpt[-msgind,]
}
# check code digits length
if(length(  (msgind = which(nchar(as.character(cpt$code))>5))   )>0){
msg<-sprintf("CPT code longer than 5 digits dropped")
warning(msg,call.=TRUE)
cpt = cpt[-msgind,]
} else if(length(   (msgind = which(nchar(as.character(cpt$code))<5))   )>0){
msg<-sprintf("CPT code shorter than 5 digits dropped")
warning(msg,call.=TRUE)
cpt = cpt[-msgind,]
}
# check numeric code range
nonnumericind = grep("[A-Z,a-z]",as.character(cpt$code))
tmp = cpt[nonnumericind,]
if(length(nonnumericind)>0 & length(nonnumericind)!=nrow(cpt)){
cptnonnum = cpt[nonnumericind,]
cptnonnum$numericcode = as.character(cptnonnum$code) # keep char in cptnonnum
cptnum = cpt[-nonnumericind,]
cptnum$numericcode = as.numeric(as.character(cptnum$code)) # char->num in cptnum
if(length(which(cptnum$numericcode>99608))>0 | length(which(cptnum$numericcode<as.numeric(00100)))>0){
msg<-sprintf("CPT codes category I out of range (00100, 99607)")
warning(msg,call.=TRUE)
cptnum = cptnum[-which(cptnum$numericcode>99607 | cptnum$numericcode<as.numeric(00100)),] # out of range of cpt codes
}
}else if(length(nonnumericind)==0){
cptnum = cpt
cptnum$numericcode = as.numeric(as.character(cptnum$code)) # char->num in cptnum
cptnonnum = NULL
if(length(which(cptnum$numericcode>99608))>0 |
length(which(cptnum$numericcode<as.numeric(00100)))>0){
msg<-sprintf("CPT codes category I out of range (00100, 99607)")
warning(msg,call.=TRUE)
cptnum = cptnum[-which(cptnum$numericcode>99607 | cptnum$numericcode<as.numeric(00100)),] # out of range of cpt codes
}
}else if(length(nonnumericind)==nrow(cpt)){
cptnonnum = cpt
cptnonnum$numericcode = as.character(cptnonnum$code) # keep char in cptnonnum
cptnum = NULL
}
print("QC done")
# return cpt data
cpt = rbind(cptnum, cptnonnum)
cptnonnum$numericcode = cptnonnum$code
View(cptnonnum)
cptnum$numericcode = as.numeric(as.character(cptnum$code))
View(cptnum)
groupbound.nonnum
dim(groupbound.nonnum)
View(groupbound.nonnum)
t=CCSS[[1]]
t=CCSS[[2]]
View(t)
View(groupbound.nonnum)
t=proc.time()
cptnonnum2 = merge(cptnonnum,groupbound.nonnum,by="code",all.x=T,all.y=F)
proc.time()-t
t=proc.time()
#cptnonnum2 = merge(cptnonnum,groupbound.nonnum,by="code",all.x=T,all.y=F)
for (i in 1:length(unique(groups))){
ind.groupbound = which(groupbound.nonnum$group.order==groups[i])
tmp.ind = cptnonnum$numericcode %in% groupbound.nonnum$upper[ind.groupbound] # upper=lower
if(length(which(tmp.ind==T))>0){
cptnonnum$codegrp[tmp.ind] = groupbound.nonnum$groupname[ind.groupbound[1]]
cptnonnum$codegrp.order[tmp.ind] = groups[i]
}
#print(i)
}
proc.time()-t
groups = unique(groupbound.nonnum$group.order)
t=proc.time()
#cptnonnum2 = merge(cptnonnum,groupbound.nonnum,by="code",all.x=T,all.y=F)
for (i in 1:length(unique(groups))){
ind.groupbound = which(groupbound.nonnum$group.order==groups[i])
tmp.ind = cptnonnum$numericcode %in% groupbound.nonnum$upper[ind.groupbound] # upper=lower
if(length(which(tmp.ind==T))>0){
cptnonnum$codegrp[tmp.ind] = groupbound.nonnum$groupname[ind.groupbound[1]]
cptnonnum$codegrp.order[tmp.ind] = groups[i]
}
#print(i)
}
proc.time()-t
t=CCSS[[1]]
t=proc.time()
#cptnonnum2 = merge(cptnonnum,groupbound.nonnum,by="code",all.x=T,all.y=F)
cptnum2 = merge(cptnum,groupbound.num,by="code",all.x=T,all.y=F)
proc.time()-t
names(CCSS)
t=CCSS[[1]]
View(t)
View(groupbound.num)
tt=summaryBy(code~codegrp,data=groupbound.num,FUN=function(x){print(paste(min(x),max(x),sep="_"))})
View(tt)
tt=summaryBy(code~codegrp,data=groupbound.num,FUN=min)
View(tt)
View(groupbound.num)
View(t)
tt2=summaryBy(lower~groupname,data=t,FUN=min)
View(tt2)
View(tt)
summary(tt[,2]-tt2[,2])
tt[is.na(tt[,2]),]
summary(as.numeric(tt[,2])-as.numeric(tt2[,2]))
tt=tt[order(tt$codegrp),]
tt2=tt2[order(tt2$codegrp),]
tt2=tt2[order(tt2$groupname),]
View(tt)
View(tt2)
summary(as.numeric(tt[,2])-as.numeric(tt2[,2]))
View(groupbound.num)
View(t)
length(unique(t$groupname))
length(unique(groupbound.num$codegrp))
ttt=as.numeric(tt[,2])-as.numeric(tt2[,2])
ttt=as.numeric(as.character(tt[,2]))-as.numeric(as.character(tt2[,2]))
summary(ttt)
ind=which(ttt!=0)
tt[ind,]
tt0=tt[ind,]
tt20=tt2[ind,]
View(tt0)
View(tt20)
summary(as.numeric(tt[,1])-as.numeric(tt2[,1]))
summary(as.numeric(as.character(tt[,1]))-as.numeric(as.character(tt2[,1])))
?match
?grep
?agrep
xx=match(tt[,1],tt2[,1])
summary(xx)
intersect <- function(x, y) y[match(x, y, nomatch = 0)]
intersect(1:10, 7:20)
tt=tt[order(as.character(tt[,1])),]
tt2=tt2[order(as.character(tt2[,1])),]
View(tt2)
View(tt)
tt[21,]
tt2[21,]
View(tt2)
summary(as.numeric(as.character(tt[,2]))-as.numeric(as.character(tt2[,2])))
dim(tt)
dim(tt2)
View(tt)
row.names(tt)
row.names(tt)=NULL
View(tt)
View(tt2)
ttt=as.numeric(as.character(tt[,2]))-as.numeric(as.character(tt2[,2]))
ind=which(ttt!=0)
ind
tt[177,]
tt2[177,]
groupbound.num[which(groupbound.num$groupname=="Other procedures to assist delivery"),]
View(groupbound.num)
groupbound.num[which(groupbound.num$codegrp=="Other procedures to assist delivery"),]
t[which(t$groupname=="Other procedures to assist delivery"),]
groupbound.num2=t
summary(t)
t$lower=as.numeric(t$lower)
t$upper=as.numeric(t$upper)
tt=summaryBy(code~codegrp,data=groupbound.num,FUN=max)
tt2=summaryBy(upper~groupname,data=t,FUN=max)
tt=tt[order(as.character(tt[,1])),]
tt2=tt2[order(as.character(tt2[,1])),]
ttt=as.numeric(as.character(tt[,2]))-as.numeric(as.character(tt2[,2]))
sum(ttt)
srt(CCSS)
str(CCSS)
CCSS=list(groupbound.num,groupbound.nonnum)
str(CCSS)
groupbound.nonnum$codegrp.order=as.numeric(as.character(groupbound.nonnum$codegrp.order))
CCSS=list(groupbound.num,groupbound.nonnum)
str(CCSS)
groupbound.num$codegrp=as.character(groupbound.num)
groupbound.num$codegrp=as.character(groupbound.num$codegrp)
View(groupbound.num)
CCSS=list(groupbound.num,groupbound.nonnum)
str(CCSS)
save(CCSS,file="CCSS.rda")
View(cptnum2)
summary(cptnum2)
summary(cpt)
cpt=rslt$cpt
summary(cpt)
length(which(is.na(cpt$codegrp.order)))
